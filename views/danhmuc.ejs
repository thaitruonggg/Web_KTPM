<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>productPage1</title>
<link rel="stylesheet" href="danhmuc.css">
<script src="danhmuc.js"></script>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Baloo 2">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
<script src="indexFunction.js"></script>

</head>

<body>
<!-- NavBar -->
<header>
    
    <div class="logo">NXB XYZ</div>
    <input type="checkbox" id="nav_check" hidden>
    <nav>
        <ul>
            <li>
                <a href="/index" class="active">Trang chủ</a>
            </li>
            <li>
                <a href="/productpage">Sản phẩm</a>
            </li>
            <li>
                <a href="/danhmuc">Danh mục</a>
            </li>
            <li>
                <a href="#" id="search-link">Tìm kiếm</a>
            </li>
            <li class="dropdown">
                <a href="#" id="user-link">Người dùng</a>
                <div class="dropdown-content">
                    <div class="login-box">
    
                        <% if(userN == null) { %>
                            <!-- TRƯỚC KHI ĐĂNG NHẬP -->
                            <form id="login-form" class="hidden-form" action="/login" method="post"> <!-- Bắt đầu form ẩn đi -->
                                <label style="font-size: 1.3rem;"><strong>ĐĂNG NHẬP TÀI KHOẢN</strong></label>
    
                                <label for="uname"><strong>Email:</strong></label>
                                <input type="text" id="uname" name="username" placeholder="Enter your name" required autocomplete="off">
    
                                <label for="pass"><strong>Password:</strong></label>
                                <input type="password" id="pass" name="password" placeholder="password" required>
    
                                <button type="submit" id="login-button">ĐĂNG NHẬP</button><br>
                                
                                <label>Khách hàng mới?  <strong><a href="/signup">Tạo tài khoản</a></strong></label>
                                <label style="color: red; font-weight: bold; " id="notifcation">
                                    <% if (typeof error !== 'undefined' && error !== null) { %>
                                        <%= error %>
                                    <% } %>         
                                </label>
                                <label style="color: green; font-weight: bold; ">
                                    <% if (typeof message !== 'undefined' && message !== null) { %>
                                        <%= message %>
                                    <% } %>         
                                </label>
                             <!--    <label>Quên mật khẩu?  <strong>Khôi phục mật khẩu</strong></label> -->
                            </form>
                        <% } else { %>
                            <!-- SAU KHI ĐĂNG NHẬP -->
                            <form id="login-form" style="display: none;" > <!-- Bắt đầu form ẩn đi -->
                                <style>
                                    label:hover {
                                        text-decoration: underline;
                                        text-decoration-thickness: 2px;
                                        text-underline-offset: 8px;
                                        text-decoration-color: black;
                                    }
                                </style>
                                <label id="checkout" style="font-size: 1.3rem; align-self: center; margin-bottom: 1px;"><strong><a href="/delivery">ĐƠN HÀNG CỦA BẠN</a></strong></label>
                                <div style="width: 100%; align-items: center; display: flex; justify-content: center;">
                                    <hr style="border: 0; border-bottom: 1px solid black; margin: 1.5rem 0; width: 100%;">
                                </div>
                                <label id="logout" style="font-size: 1.3rem; align-self: center; margin-bottom: 1px;"><strong><a href="/logout">ĐĂNG XUẤT</a></strong></label>
                            </form>
                        <% } %>
                            
    
    
                    </div>
                </div>
                <li id="cart-container">
                    <a href="/cart">
                <div class="cart-box">
                    <span>GIỎ HÀNG</span>
                </div>
                <div class="cart-box">
                    <%= carts %>
                </div>
            </a>
            </li>
            </li>
            
        </ul>
    </nav>
    <label for="nav_check" class="smallScale">
        <div></div>
        <div></div>
        <div></div>
    </label>
    </header>
    <div class="search-box-container" id="search-box-container">
        <div class="search-box">
            <input type="text" id="search-input" placeholder="Bạn đang muốn tìm gì?">
            <button id="search-button" onclick="">Tìm kiếm</button>
        </div>
    </div>
<!-- Container1 -->
<main class="container1">
	
  <!-- Left Column / Books Image -->
  <div class="left-column1">
    <div class="cl"></div>
    <div class="book-category" ng-cloak>
        <div class="left-menu hide-responsive">
            <div class="category sidemenu-template">
                <h1 class="title">Danh mục </h1>
                <div class="sidemenu-box">
                </div>
            </div>
                    <h2 class="title">
                        Thể Loại

                    </h2>
            </div>

            <div class="product-by-price sidemenu-template" ng-show="mainCatstr=='sach'">
              
                <div class="filter">
                    <ul class='sidebar-menu-new'>
                        <li >
                            <input type="checkbox" name="tag" value="" onchange="getSelected()">
                            <a>All<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Lãng mạn" onchange="getSelected()">
                            <a>Lãng Mạn<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Girls Love" onchange="getSelected()">
                            <a>Girls Love<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Hài hước" onchange="getSelected()">
                            <a>Hài Hước<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Đời thường" onchange="getSelected()">
                            <a>Đời Thường<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Âm nhạc" onchange="getSelected()">
                            <a>Âm Nhạc<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Shounen" onchange="getSelected()">
                            <a>Shounen<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Giả tưởng" onchange="getSelected()">
                            <a>Giả Tưởng<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Drama" onchange="getSelected()">
                            <a>Drama<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Drama tâm lý" onchange="getSelected()">
                            <a>Drama Tâm Lý<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Mecha" onchange="getSelected()">
                            <a>Mecha<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Hành động" onchange="getSelected()">
                            <a>Hành Động<i class='item-total'></i></a>
                        </li>
                        <li >
                            <input type="checkbox" name="tag" value="Học đường" onchange="getSelected()">
                            <a>Học Đường<i class='item-total'></i></a>
                        </li>
                    </ul>
                </div>

            </div>

            <div class="product-by-price sidemenu-template">
                <h2 class="title">Giá</h2>
                <div class="filter">
                    <ul class="sidebar-menu-new">
                        <li>
                            <input type="checkbox" name="num" value = "50000" onchange="change()">
                            <a>Giá nhỏ hơn 50.000đ</a>
                        </li>
                        <li>
                            <input type="checkbox" name="num" onchange="change()">
                            <a>Giá từ 50.000 -  100.000đ</a>
                        </li>
                        <li>
                            <input type="checkbox" name="num" onchange="change()">
                            <a>Giá từ 100.000 -  150.000đ</a>
                        </li>
                        <li>
                            <input type="checkbox" name="num" onchange="change()">
                            <a>Giá từ 150.000 -  200.000đ</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
  </div>
 
 
  <!-- Right Column -->
<div class="right-column1">
 
    <!-- Product Description -->
    <!-- Grid san pham -->	
<div class = "wrapper">
    <div class = "container">
		<div class = "sanPham">
		<div class = "containerSP">
            <% if (bookFound && bookFound.length > 0) { %>
                <% bookFound.forEach(name => { %>
                    <% const book = pros.find(item => item.name === name); %>
                    <% if (book) { %>
                        <div class="itemSP">
                            <div class="imgSP">
                                <img src="<%= book.sach[0].picURL %>" alt="imageSP" onclick="Click('<%= book.name %>')">
                                <div>
                                    <button type="button" class="add-btn" onclick="checkSession()">Thêm vào giỏ </button>
                                </div>
                            </div>
                            <div class="contentSP">
                                <a href="" class="book-title" onclick="Click('<%= book.name %>')"><%= book.name %></a>
                                <p class="author">Tác giả: <span><%= book.author %></span></p>
                                <div><span class="giaTien"><%= (book.sach[0].gia).toLocaleString('vi-VN', {style: 'currency', currency: 'VND'}) %></span></div>
                            </div>
                        </div>
                    <% } %>
                <% }); %>
            <% } else { %>
                <% pros.forEach(book => { %>
                    <div class="itemSP">
                        <div class="imgSP">
                            <img src="<%= book.sach[0].picURL %>" alt="imageSP"  onclick="Click('<%= book.name %>')">
                            <div>
                                <button type="button" class="add-btn" onclick="checkSession()">Thêm vào giỏ </button>
                            </div>
                        </div>
                        <div class="contentSP">
                            <a href="" class="book-title" onclick="Click('<%= book.name %>')"><%= book.name %></a>
                            <p class="author">Tác giả: <span><%= book.author %></span></p>
                            <div><span class="giaTien"><%= (book.sach[0].gia).toLocaleString('vi-VN', {style: 'currency', currency: 'VND'}) %></span></div>
                        </div>
                    </div>
                <% }); %>
            <% } %>
            
            
    </div>
</div>
	</div>
	</div>
  </div>
</main>

	
<!-- Footer -->
<footer class="footer">
  	 <div class="container">
  	 	<div class="row">
  	 		<div class="footer-col">
  	 			<h4>NXB XYZ</h4>
  	 			<ul>
  	 				<li><a href="#">Về chúng tôi</a></li>
  	 				<li><a href="#">Dịch vụ của chúng tôi</a></li>
  	 				<li><a href="#">Chính sách bảo mật</a></li>
  	 				<li><a href="#">Chương trình liên kết</a></li>
  	 			</ul>
  	 		</div>
  	 		<div class="footer-col">
  	 			<h4>Bạn cần trợ giúp?</h4>
  	 			<ul>
  	 				<li><a href="#">FAQ</a></li>
  	 				<li><a href="#">Giao hàng</a></li>
  	 				<li><a href="#">Đổi trả</a></li>
  	 				<li><a href="#">Trạng thái đơn hàng</a></li>
  	 			</ul>
  	 		</div>
  	 		<div class="footer-col">
  	 			<h4>online shop</h4>
  	 			<ul>
  	 				<li><a href="#">Manga</a></li>
  	 				<li><a href="#">Light Novel</a></li>
  	 				<li><a href="#">Comics</a></li>
  	 				<li><a href="#">Kỹ năng sống</a></li>
  	 			</ul>
  	 		</div>
  	 		<div class="footer-col">
  	 			<h4>Theo dõi chúng tôi</h4>
  	 			<div class="social-links">
  	 				<a href="#"><i class="fab fa-facebook-f"></i></a>
  	 				<a href="#"><i class="fab fa-twitter"></i></a>
  	 				<a href="#"><i class="fab fa-instagram"></i></a>
  	 				<a href="#"><i class="fab fa-linkedin-in"></i></a>
  	 			</div>
  	 		</div>
  	 	</div>
  	 </div>
  </footer>
</body>

<script>
	function addToCart(productID) {
        // Tạo một đối tượng dữ liệu để gửi lên server
        const data = { productID: productID };

        // Gửi yêu cầu POST đến route "/add-to-cart" trên server
        fetch('/add-to-cart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(response => {
            // Xử lý phản hồi từ server (nếu cần)
        }).catch(error => {
            console.error('Error:', error);
        });
    }

    function updateCart() {
    // Thực hiện logic thêm sản phẩm vào giỏ hàng ở đây

    // Sau khi đã thêm vào giỏ hàng, chuyển hướng người dùng đến route /index
    window.location.href = '/index';
}


    function checkSession(itemId) {
   var xhr = new XMLHttpRequest();
   xhr.open('GET', '/checkSession');
   xhr.onload = function() {
       if (xhr.status === 200) {
           var response = JSON.parse(xhr.responseText);
           if (!response.loggedIn) {
               // Hiển thị thông báo nếu người dùng chưa đăng nhập
               alert('Vui lòng đặt nhập trước khi thêm vào giỏ hàng');
           } else {
            addItemIntoCart(itemId)
            console.log(items);
           }
       } else {
           // Hiển thị thông báo nếu có lỗi trong quá trình kiểm tra session
           alert('Error checking session');

           console.log(items);
       }
   };
   xhr.send();
}
    
  </script>
  
  <script>
        //Navbar	
        document.addEventListener("DOMContentLoaded", function() {
                
            var searchLink = document.getElementById("search-link");
            var searchBoxContainer = document.getElementById("search-box-container");
            var searchInput = document.getElementById("search-input");
        
            searchLink.addEventListener("click", function(event) {
                event.preventDefault();
                if (searchBoxContainer.style.display === "block") {
                    searchBoxContainer.style.display = "none";
                } else {
                    searchBoxContainer.style.display = "block";
                }
            });
        
            document.getElementById("search-button").addEventListener("click", function() {
                var searchText = document.getElementById('search-input').value;
                fetch('/search?query=' + searchText)
                    .then(response => {
                        // Kiểm tra nếu phản hồi là chuyển hướng
                        if (response.redirected) {
                            // Chuyển hướng trình duyệt đến URL mới
                            window.location.href = response.url;
                            return; // Dừng việc xử lý tiếp theo
                        }
                        // Nếu không phải là chuyển hướng, xử lý phản hồi JSON
                        return response.json();
                    })
                    .then(data => {
                        // Xử lý kết quả tìm kiếm ở đây nếu cần
                        console.log(data);
                    })
                    .catch(error => console.error('Error:', error));
            });
        });
        
        document.getElementById('user-link').addEventListener('click', function(event) {
            event.preventDefault();
            toggleDropdown();
        });
        
        function toggleDropdown() {
            const dropdownContent = document.querySelector('.dropdown-content');
            dropdownContent.style.display = (dropdownContent.style.display === 'block') ? 'none' : 'block';
        }
        
        //Navbar sau khi Log in
        document.getElementById('checkout').addEventListener('click', function() {
            window.location.href = 'orders.html';
          });
        
          document.getElementById('logout').addEventListener('click', function() {
            window.location.href = 'logout.html';
          });
                
                
        //Pop-up
        let popup = document.getElementById("popup");
        
        function openPopup(){
            popup.classList.add("open-popup");
            document.body.classList.add("popup-open");
        }
        
        function closePopup(){
            popup.classList.remove("open-popup");
            document.body.classList.remove("popup-open");
        }
    
    </script>
   
   <script>
        // Đảm bảo mã JavaScript được thực thi sau khi tài liệu HTML đã được tải
        document.addEventListener('DOMContentLoaded', function() {
            // Lấy phần tử "login-button"
            var loginButton = document.getElementById('user-link');
            
            // Lấy form cần hiển thị khi click vào "login-button"
            var loginForm = document.getElementById('login-form');

            // Thêm sự kiện click cho "login-button"
            loginButton.addEventListener('click', function() {
                // Khi click vào "login-button", thay đổi thuộc tính "display" của form từ "none" sang "block"
                loginForm.style.display = 'block';
            });
        });
        document.addEventListener('DOMContentLoaded', function() {
        // Lấy thẻ form
        var loginForm = document.getElementById('login-form');

        // Kiểm tra trạng thái đăng nhập và ẩn/hiện form tương ứng
        if (<%= userN %> == null) {
            loginForm.classList.add('hidden-form');
        } else {
            loginForm.classList.remove('hidden-form');
        }
    });
    </script>



</html>
<script>
//     function change() {
//   let results = Array.from(document.querySelectorAll('.containerSP > div'));
//   // Hide all results
//   results.forEach(function(result) {
//     result.style.display = 'none';
//   });
//   // Filter results to only those that meet ALL requirements:
//   Array.from(document.querySelectorAll('.filter input[rel]:checked'), function(input) {
//     const attrib = input.getAttribute('rel');
//     results = results.filter(function(result) {
//       return result.classList.contains(attrib);
//     });
//   });
//   // Show those filtered results:
//   results.forEach(function(result) {
//     result.style.display = 'block';
//   });
// }
// change();

// function numSelected() {
//             var selectedNums = [];
//             var checkboxes = document.getElementsByName('tag');
//             for (var i = 0; i < checkboxes.length; i++) {
//                 if (checkboxes[i].checked) {

//                     // selectedItems.append(checkboxes[i].value);
//                     selectedItems.push(checkboxes[i].value);
//                 }
//             }
//             // console.log(selectedItems);
//         // Gửi yêu cầu POST đến route "/add-to-cart" trên server
//         fetch('/danhmuc', {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json'
//             },
//             body: JSON.stringify({filterem: selectedItems })

//         }).then(response => {
//             // Xử lý phản hồi từ server (nếu cần)
//         }).catch(error => {
//             console.error('Error:', error);
//         });
        
//         }

        function getSelected() {
            var selectedItems = [];
            var checkboxes = document.getElementsByName('tag');
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {

                    // selectedItems.append(checkboxes[i].value);
                    selectedItems.push(checkboxes[i].value);
                }
            }
            // console.log(selectedItems);
        // Gửi yêu cầu POST đến route "/add-to-cart" trên server
        fetch('/danhmuc', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({filterem: selectedItems })

        }).then(response => {
            if (response.redirected) {
                            // Chuyển hướng trình duyệt đến URL mới
                            window.location.href = response.url;
                            return; // Dừng việc xử lý tiếp theo
                        }
                        // Nếu không phải là chuyển hướng, xử lý phản hồi JSON
                        return response.json();
        }).catch(error => {
            console.error('Error:', error);
        });
        
        }
     
    // const URlpage = '/productpage';
    function Click(bookName) {
        console.log(bookName);
        fetch('/ori', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ bookName: bookName }),
        }).then(response => {
            // Kiểm tra nếu phản hồi là chuyển hướng
            if (response.redirected) {
                            // Chuyển hướng trình duyệt đến URL mới
                            window.location.href = response.url;
                            return; // Dừng việc xử lý tiếp theo
                        }
                        // Nếu không phải là chuyển hướng, xử lý phản hồi JSON
                        return response.json();
        }).catch(error => {
            console.error('Error:', error);
        });
        //getProductPage()
    }

    // async function getProductPage() {
    // try {
    //     const response = await fetch('/productpage');
    //     if (!response.ok) {
    //         throw new Error(`HTTP error! Status: ${response.status}`);
    //     }
    //     const data = await response.json();
    //     // Xử lý dữ liệu trả về
    //     console.log(data);
    //     // Sau đó, bạn có thể thực hiện các hành động khác như hiển thị dữ liệu lên trang web
    // } catch (error) {
    //     console.error('Fetch error:', error);
    // }

</script>